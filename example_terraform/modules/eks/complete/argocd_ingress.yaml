apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: argocd
  name: argocd-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: alb-01
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: jhoh-tf-argocd-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:088755231083:certificate/3d2e746b-c233-4a9d-bfdc-267c366916ed
    alb.ingress.kubernetes.io/subnets: subnet-0dae30bc0e8d4ff62,subnet-02f6f486e03b54af1,subnet-076ea93795834b57c
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-FS-1-2-Res-2020-10
    alb.ingress.kubernetes.io/healthcheck-path: /login
    alb.ingress.kubernetes.io/success-codes: 200-399
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
  labels:
    app: argocd-ingress
spec:
  rules:
    - host: argocd.jhoh1075.link
      http:
        paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: argocd-server
              port:
                number: 443
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
spec:
  selector:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: argocd
  ports:
  - name: https
    port: 443
    targetPort: 8080
  type: NodePort
