---
apiVersion: v1
kind: Namespace
metadata:
  name: jhoh-tf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapi-deployment
  namespace: jhoh-tf
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      name: webapi-pod
      namespace: kube-system
      labels:
        app: backend
    spec:
      containers:
      - name: webapi
        image: nginx:1.10
        ports:
        - containerPort: 80
          name: webapi-port
      tolerations:
      - key: eks.amazonaws.com/compute-type
        value: fargate
        effect: NoSchedule

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
  name: deployment-nodeport
  namespace: jhoh-tf
spec:
  ports:
    - name: webapi-svc-port
      port: 8080
      targetPort: webapi-port
  selector:
    app: webapi
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-test
  namespace: jhoh-tf
  labels:
    app: backend
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kkubernetes.io/subnets: subnet-0c782f1664cbb90de,subnet-07b6d345f5dc5c8a0
    alb.ingress.kubernetes.io/target-node-labels: app=backend
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/security-groups: sg-0f082b5ec1eb90310
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "true"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: web-svc-port
    alb.ingress.kubernetes.io/healthcheck-path: /index.html
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/success-codes: 200-366
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:708595888134:certificate/51d541aa-46de-41f9-9959-9567b8836930
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01
    alb.ingress.kubernetes.io/target-group-attributes: slow_start.duration_seconds=30
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/target-group-attributes: load_balancing.algorithm.type=least_outstanding_requests
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
spec:
  ingressClassName: awesome-class
  rules:
  - host: kuber.jhoh1075.link
    http:
      paths:
      - pathType: Prefix
        path: /*
        backend:
          service:
            name: deployment-nodeport
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: awesome-class
  namespace: jhoh-tf
spec:
  controller: ingress.k8s.aws/alb

